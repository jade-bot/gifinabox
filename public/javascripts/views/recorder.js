// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  bs.views.Recorder = (function(_super) {
    var disable, enable;

    __extends(Recorder, _super);

    function Recorder() {
      return Recorder.__super__.constructor.apply(this, arguments);
    }

    Recorder.prototype.events = {
      "click #record": "_record",
      "click #stop": "_stop"
    };

    Recorder.prototype.initialize = function() {
      this.$startButton = $('#record');
      this.$stopButton = $('#stop');
      disable(this.$stopButton);
      enable(this.$startButton);
      return this.recorder = new MediaRecorder({
        video: this.$("video")[0],
        canvas: this.$("canvas")[0],
        height: 240,
        width: 320
      });
    };

    Recorder.prototype._record = function() {
      disable(this.$startButton);
      enable(this.$stopButton);
      return this.recorder.start();
    };

    Recorder.prototype._stop = function() {
      disable(this.$stopButton);
      enable(this.$startButton);
      this.recorder.stop();
      return this.$("#gif").attr('src', this.recorder.dataURL());
    };

    disable = function($el) {
      return $el.attr('disabled', 'disabled');
    };

    enable = function($el) {
      return $el.removeAttr('disabled');
    };

    return Recorder;

  })(Backbone.View);

}).call(this);
