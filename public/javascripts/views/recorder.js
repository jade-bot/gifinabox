// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  bs.views.Recorder = (function(_super) {
    var disable, enable, onError, onSave;

    __extends(Recorder, _super);

    function Recorder() {
      return Recorder.__super__.constructor.apply(this, arguments);
    }

    Recorder.prototype.events = {
      "click #record:not(.stop)": "_record",
      "click #record.stop": "_stop"
    };

    Recorder.prototype.initialize = function() {
      this.$startButton = $('#record');
      enable(this.$startButton);
      this.on('gif:uploading', this._uploadStart.bind(this));
      this.on('gif:done', onSave);
      this.on('gif:fail', onError);
      return this.recorder = new MediaRecorder({
        video: this.$("video")[0],
        canvas: this.$("canvas")[0],
        height: 240,
        width: 320
      });
    };

    Recorder.prototype._record = function() {
      disable(this.$startButton);
      this.$("video").show();
      this.$("#gif").hide();
      return this.recorder.start();
    };

    Recorder.prototype._stop = function() {
      enable(this.$startButton);
      this.recorder.stop();
      this.$("#gif").attr('src', "data:image/gif;base64," + (this.recorder.encodedData())).show();
      this.$("video").hide();
      return this.trigger("gif:create", this.recorder.encodedData());
    };

    Recorder.prototype._uploadStart = function(e) {
      return this.$startButton.attr('class', 'uploading');
    };

    disable = function($el) {
      return $el.attr('class', 'stop');
    };

    enable = function($el) {
      return $el.removeClass('stop').removeClass('uploading');
    };

    onSave = function(gif) {
      $('#link').attr('href', gif.link()).text(gif.link());
      $('#gifs').prepend("<li><a href='" + (gif.link()) + "'><img src='" + (gif.get('url')) + "'></a></li>");
      $('#record').removeClass('uploading');
      return alert("Your gif was created successfully!");
    };

    onError = function() {
      return alert("We had some trouble saving your gif.");
    };

    return Recorder;

  })(Backbone.View);

}).call(this);
