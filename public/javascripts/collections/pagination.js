// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  bs.collections.Pagination = (function(_super) {

    __extends(Pagination, _super);

    function Pagination() {
      this._contructUrl = __bind(this._contructUrl, this);

      this._fetchNext = __bind(this._fetchNext, this);

      this._fetchPrev = __bind(this._fetchPrev, this);
      return Pagination.__super__.constructor.apply(this, arguments);
    }

    Pagination.prototype.GIFS_PER_PAGE = 18;

    Pagination.prototype.urlRoot = '/p';

    Pagination.prototype.initialize = function(options) {
      var _ref;
      this.options = options != null ? options : {};
      this.gifsCollection = this.options.gifsCollection;
      this.view = new bs.views.Pagination({
        el: "#pagination"
      });
      this.view.render();
      this.currentOffset = +((_ref = this.options.offset) != null ? _ref : 0);
      this.view.on('click:prev', this._fetchPrev);
      return this.view.on('click:next', this._fetchNext);
    };

    Pagination.prototype.parse = function(response) {
      this.gifsCollection.reset(response.gifs);
      return this.currentOffset = response.offset;
    };

    Pagination.prototype._fetchPrev = function() {
      var params;
      params = {
        offset: this.currentOffset - this.GIFS_PER_PAGE
      };
      this.url = this._contructUrl(params);
      return this.fetch();
    };

    Pagination.prototype._fetchNext = function() {
      var params;
      params = {
        offset: this.currentOffset + this.GIFS_PER_PAGE
      };
      this.url = this._contructUrl(params);
      return this.fetch();
    };

    Pagination.prototype._contructUrl = function(params) {
      return "" + this.urlRoot + "?" + ($.param(params));
    };

    return Pagination;

  })(Backbone.Collection);

}).call(this);
