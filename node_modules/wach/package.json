{
  "name": "wach",
  "description": "Run a command when a file add/update event occurs",
  "version": "0.9.2",
  "main": "./lib/wach",
  "bin": {
    "wach": "./bin/wach",
    "wachs": "./bin/wachs",
    "wach-watchdir": "./bin/wach-watchdir"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "dependencies": {
    "minimatch": ">=0.0.5"
  },
  "devDependencies": {
    "coffee-script": "1.1.2",
    "mocha": "0.14.1"
  },
  "os": [
    "darwin"
  ],
  "scripts": {
    "preinstall": "make bin/wach-watchdir"
  },
  "author": {
    "name": "Myles Byrne"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/quackingduck/wach.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/quackingduck/wach/raw/master/LICENSE"
    }
  ],
  "keywords": [
    "watch",
    "filesystem",
    "fsevents",
    "monitor",
    "supervise",
    "observe"
  ],
  "readme": "`8.`888b                 ,8' .8.           ,o888888o.    8 8888        8\n `8.`888b               ,8' .888.         8888     `88.  8 8888        8\n  `8.`888b             ,8' :88888.     ,8 8888       `8. 8 8888        8\n   `8.`888b     .b    ,8' . `88888.    88 8888           8 8888        8\n    `8.`888b    88b  ,8' .8. `88888.   88 8888           8 8888        8\n     `8.`888b .`888b,8' .8`8. `88888.  88 8888           8 8888        8\n      `8.`888b8.`8888' .8' `8. `88888. 88 8888           8 8888888888888\n       `8.`888`8.`88' .8'   `8. `88888.`8 8888       .8' 8 8888        8\n        `8.`8' `8,`' .888888888. `88888.  8888     ,88'  8 8888        8\n         `8.`   `8' .8'       `8. `88888.  `8888888P'    8 8888        8\n\n\n\"watch changes\"\n\n  Watch for changes to files within the current directory and run a command\n  when they occur.\n\n  Wach is really fast, the command is run as soon as the file changes, no\n  polling delay.\n\n  Comes with two executables: `wach` and `wachs`.\n\n  The `wach` utility will run any command (or inline shell script) whenever\n  files in the current directory are updated.\n\n  The `wachs` (there's an \"s\" on the end) utility does the same thing but for\n  commands that launch a long running process like a web server. It'll kill\n  the current process and launch a new one on file updates.\n\n  Actually there's a third - bonus! - executable that's probably only of\n  interest to developer of similar programs. The command `wach-watchdir` is\n  a tiny OS X binary that will monitor a directory for changes and print the\n  path that changed to stdout as soon as the change occurs. The other two\n  Wach executables use this internally for the filesystem monitoring part.\n\nRequirements\n\n  Only runs on OS X 10.7 (Lion). Sorry\n\nInstall\n\n  npm install wach\n\nExamples\n\n  # Run `make` every time a file in the current directory is updated/added\n  wach make\n\n  # Compile and run on every change\n  wach \"gcc hello.c && ./a.out\"\n\n  # Only watch for changes to coffee files, compile the one that changed\n  wach -o *.coffee, coffee -c {}\n\n  # Run the tests every time a ruby file changes\n  TEST_DIR=generators wach -o **/*.rb, bundle exec rake test\n\n  # Restart a node app any time a js file changes\n  wachs -o *.js, node server.js\n\nNode API\n\n  wach = require('../src/wach');\n  wach('.', function(path) {\n    return console.log(\"something happened to \" + path + \"!\");\n  })\n\nOther similar projects:\n\n  Patrick Mueller's wr\n  https://github.com/pmuellr/wr\n\n  steakout\n  http://michael-mccracken.net/software/stakeout.tgz\n\n  steakout.rb\n  http://www.pragmaticautomation.com/cgi-bin/pragauto.cgi/Monitor/StakingOutFileChanges.rdoc\n\n  the --watch flag for coffeescript\n  http://jashkenas.github.com/coffee-script/#usage\n\n  unix watch\n  http://en.wikipedia.org/wiki/Watch_(Unix)\n\n  TJ Holowaychuk's watch\n  https://github.com/visionmedia/watch\n\n  Isaac Z. Schlueter's node-supervisor\n  https://github.com/isaacs/node-supervisor\n\n  David Trejo's run.js\n  https://github.com/DTrejo/run.js\n\n  Gabriel Gironda's kqfm\n  https://github.com/gabrielg/kqfm\n",
  "readmeFilename": "README",
  "_id": "wach@0.9.2",
  "_from": "wach@~0.9.1"
}
